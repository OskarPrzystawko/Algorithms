Algorithm: Quick-union
Sequence: 9-0 3-4 5-8 7-2 2-1 5-7 0-3 4-2

Initially
id[]
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9

0 1 2 3 4 5 6 7 8 9

--------------------
input: 9-0
id[9] = 0
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 0

0  1  2  3  4  5  6  7  8
|
9

Array access:
 union()
    find(0)      -> 1 access
    find(9)      -> 1 access
    set new root -> 1 access

Array accesses = 3
--------------------
input: 3-4
id[3] = 4
0 1 2 3 4 5 6 7 8 9
0 1 2 4 4 5 6 7 8 0

0  1  2  4  5  6  7  8
|        |
9        3

Array access:
 union()
    find(3)      -> 1 access
    find(4)      -> 1 access
    set new root -> 1 access

Array accesses = 3
--------------------
input: 5-8
id[5] = 8
0 1 2 3 4 5 6 7 8 9
0 1 2 4 4 8 6 7 8 0

0  1  2  4  6  7  8
|        |        |
9        3        5

Array access:
 union()
    find(5)      -> 1 access
    find(8)      -> 1 access
    set new root -> 1 access

Array accesses = 3
--------------------
input: 7-2
id[7] = 2
0 1 2 3 4 5 6 7 8 9
0 1 2 4 4 8 6 2 8 0

0  1  2  4  6  8
|     |  |     |
9     7  3     5

Array access:
 union()
    find(7)      -> 1 access
    find(2)      -> 1 access
    set new root -> 1 access

Array accesses = 3
--------------------
input: 2-1
id[2] = 1
0 1 2 3 4 5 6 7 8 9
0 1 1 4 4 8 6 2 8 0

0  1  4  6  8
|  |  |     |
9  2  3     5
   |
   7

Array access:
 union()
    find(2)      -> 1 access
    find(1)      -> 1 access
    set new root -> 1 access

Array accesses = 3
--------------------
input: 5-7
id[8] = 1
0 1 2 3 4 5 6 7 8 9
0 1 1 4 4 8 6 2 1 0

0    1    4  6
|   / \   |
9  2   8  3
   |   |
   7   5

Array access:
 union()
    find(5)      -> 3 access
    find(7)      -> 5 access
    set new root -> 1 access

Array accesses = 9
--------------------
input: 0-3
id[4] = 0
0 1 2 3 4 5 6 7 8 9
4 1 1 4 4 8 6 2 1 0

  4       1     6
 / \     / \
0   3   2   8
|       |   |
9       7   5

Array access:
 union()
    find(0)      -> 1 access
    find(3)      -> 3 access
    set new root -> 1 access

Array accesses = 5
--------------------
input: 4-2
id[4] = 2
0 1 2 3 4 5 6 7 8 9
4 1 1 4 1 8 6 2 1 0

          1     6
        / | \
       4  2  8
     / |  |  |
    0  3  7  5
    |
    9

Array access:
 union()
    find(4)      -> 1 access
    find(2)      -> 3 access
    set new root -> 1 access

Array accesses = 5
--------------------

Total array accesses = 5*3 + 2*5 + 9 = 34
Average array accesses per union = 66 / 8 = 4,25